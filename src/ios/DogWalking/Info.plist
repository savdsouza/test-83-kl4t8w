<!--
  Info.plist
  DogWalking
  This file defines core configuration settings for the DogWalking iOS application.
  It includes essential metadata, device capability requirements, background modes,
  and strict security policies to ensure a robust, enterprise-grade app experience.
  References:
    - AppConstants (for app version and iOS version constants)
    - APIConstants (for strict transport security domain references)
  All keys and values below are aligned with Appleâ€™s guidelines, using placeholders
  and dictionary structures where applicable. 
-->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC
          "-//Apple//DTD PLIST 1.0//EN"
          "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>

    <!--
      Bundle Identifier: A unique identifier for this application. 
      Must match provisioning profiles and is used for tracking app updates.
    -->
    <key>CFBundleIdentifier</key>
    <string>com.dogwalking.app</string>

    <!--
      Bundle Name: Internal name reference for the app bundle.
      Often used as an internal identifier, while CFBundleDisplayName is shown to users.
    -->
    <key>CFBundleName</key>
    <string>DogWalking</string>

    <!--
      Bundle Display Name: The user-facing name of the application as it appears on the device.
    -->
    <key>CFBundleDisplayName</key>
    <string>DogWalking</string>

    <!--
      Short Version String: Maps to human-readable build version. This is replaced at build time
      using the app version from AppConstants (e.g., "1.0.0"). 
      Example placeholder: ${APP_VERSION}
    -->
    <key>CFBundleShortVersionString</key>
    <string>${APP_VERSION}</string>

    <!--
      Bundle Version: Internal build number, incremented for each submission to the App Store.
    -->
    <key>CFBundleVersion</key>
    <string>1</string>

    <!--
      LSRequiresIPhoneOS: Indicates that this app runs only on iOS-compatible devices.
      This key is set to true for iOS applications.
    -->
    <key>LSRequiresIPhoneOS</key>
    <true/>

    <!--
      MinimumOSVersion: Defines the minimum iOS version required to install and run this app.
      Per project constraints, iOS 13+ is required for modern features and security updates.
    -->
    <key>MinimumOSVersion</key>
    <string>13.0</string>

    <!--
      ITSAppUsesNonExemptEncryption: Specifies whether the app uses encryption that is exempt or not.
      Here, we set it to false, indicating no special encryption export compliance required.
    -->
    <key>ITSAppUsesNonExemptEncryption</key>
    <false/>

    <!--
      UIRequiredDeviceCapabilities: Specifies required device capabilities, ensuring the device 
      can run critical features (e.g., location services and GPS) before installation is allowed.
    -->
    <key>UIRequiredDeviceCapabilities</key>
    <array>
        <!-- Ensures an ARMv7 CPU architecture -->
        <string>armv7</string>
        <!-- Requires location services for tracking dog walks -->
        <string>location-services</string>
        <!-- Requires GPS for real-time tracking accuracy -->
        <string>gps</string>
    </array>

    <!--
      UIBackgroundModes: Enables app operations in the background for location updates, 
      fetching new data, remote notifications, and additional processing.
      Critical to maintain dog walk tracking when the app is not in the foreground.
    -->
    <key>UIBackgroundModes</key>
    <array>
        <string>location</string>
        <string>fetch</string>
        <string>remote-notification</string>
        <string>processing</string>
    </array>

    <!--
      NSLocationPermissions: Comprehensive location permission dictionary with explicit usage reasons, 
      including temporary access for specific scenarios (e.g., active walks).
    -->
    <!-- NSLocationWhenInUseUsageDescription: Prompt shown to users upon requesting location while the app is in use. -->
    <key>NSLocationWhenInUseUsageDescription</key>
    <string>DogWalking uses your location to track walks, find nearby walkers, and ensure the safety of your dog</string>

    <!-- NSLocationAlwaysAndWhenInUseUsageDescription: Prompt shown to users when requesting location even in the background. -->
    <key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
    <string>Background location access is required to track ongoing walks and ensure the safety of dogs in our care</string>

    <!--
      NSLocationTemporaryUsageDescriptionDictionary:
      Provides additional context for short-term location permissions (e.g., specialized active walk state).
    -->
    <key>NSLocationTemporaryUsageDescriptionDictionary</key>
    <dict>
        <key>WalkTracking</key>
        <string>Precise location is needed during active walks for accurate tracking</string>
    </dict>

    <!--
      NSAppTransportSecurity: Configures strict security for network connections. 
      In this case, arbitrary loads are disallowed, TLS 1.3 is required, and 
      certificate transparency is enabled for the API domain.
    -->
    <key>NSAppTransportSecurity</key>
    <dict>
        <!-- Disallow insecure or arbitrary network connections -->
        <key>NSAllowsArbitraryLoads</key>
        <false/>
        <!-- Domain exceptions: We rely on strong security settings for the specified API domain -->
        <key>NSExceptionDomains</key>
        <dict>
            <!-- ${API_BASE_URL} is replaced at build time with the appropriate API domain from APIConstants. -->
            <key>${API_BASE_URL}</key>
            <dict>
                <key>NSExceptionAllowsInsecureHTTPLoads</key>
                <false/>
                <key>NSExceptionRequiresForwardSecrecy</key>
                <true/>
                <key>NSExceptionMinimumTLSVersion</key>
                <string>TLSv1.3</string>
                <key>NSIncludesSubdomains</key>
                <true/>
                <key>NSRequiresCertificateTransparency</key>
                <true/>
            </dict>
        </dict>
    </dict>

    <!--
      LSApplicationQueriesSchemes: Specifies external URL schemes that this app can query or open.
      Here, deep linking to common map apps, phone, SMS, and email is allowed.
    -->
    <key>LSApplicationQueriesSchemes</key>
    <array>
        <string>comgooglemaps</string>
        <string>maps</string>
        <string>tel</string>
        <string>sms</string>
        <string>mailto</string>
    </array>

    <!-- NSCameraUsageDescription: Provides the user-facing text explaining the need for camera access -->
    <key>NSCameraUsageDescription</key>
    <string>DogWalking requires camera access to capture photos during walks, providing visual updates of your dog's activities</string>

    <!-- NSPhotoLibraryUsageDescription: Explains why the app needs to read from the user's photo library -->
    <key>NSPhotoLibraryUsageDescription</key>
    <string>Access to your photo library is needed to upload walk photos and share memorable moments of your dog's walk</string>

    <!-- NSMicrophoneUsageDescription: Justifies microphone access, for example, recording emergency voice notes -->
    <key>NSMicrophoneUsageDescription</key>
    <string>Microphone access is required for recording voice notes during emergency situations on walks</string>

    <!-- NSContactsUsageDescription: Details the reason for contacts access, such as sharing walk details with family/friends -->
    <key>NSContactsUsageDescription</key>
    <string>Contact access allows you to easily share walk details with family members or emergency contacts</string>

    <!-- UILaunchStoryboardName: Defines the storyboard used at app launch -->
    <key>UILaunchStoryboardName</key>
    <string>LaunchScreen</string>

    <!--
      UISupportedInterfaceOrientations: Explicitly stating supported device orientations.
      In this case, the app supports portrait mode only to simplify walk tracking UI.
    -->
    <key>UISupportedInterfaceOrientations</key>
    <array>
        <string>UIInterfaceOrientationPortrait</string>
    </array>

    <!--
      UIUserInterfaceStyle: Force the interface style preference. 
      Here, set to "Light" for consistent visuals across devices.
    -->
    <key>UIUserInterfaceStyle</key>
    <string>Light</string>

</dict>
</plist>