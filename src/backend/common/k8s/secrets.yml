###############################################################################
# Kubernetes Secrets manifest for the Dog Walking Platform
# This file defines multiple Secret resources that house sensitive credentials,
# API keys, encryption keys, and other confidential configurations, as required
# by the microservices in this platform.
#
# Each Secret is labeled and annotated for classification, rotation, and
# encryption metadata, adhering to the enterprise security standards described
# in the technical specification.
###############################################################################

---
apiVersion: v1
kind: Secret
metadata:
  name: database-secrets
  labels:
    # Identifies the application suite these secrets belong to
    app.kubernetes.io/name: dog-walking-platform

    # Specifies that these secrets belong to the 'secrets' component
    app.kubernetes.io/component: secrets

    # Security classification label designating critical data
    security.platform.io/classification: critical

  annotations:
    # Indicates the frequency of scheduled secret rotation
    secret.platform.io/rotation-schedule: "30d"

    # Placeholder for the timestamp of last rotation
    secret.platform.io/last-rotated: "timestamp"

    # Encryption metadata annotation
    secret.platform.io/encryption: "aes256-gcm"
type: Opaque
data:
  #############################################################################
  # MongoDB Credentials
  #
  # - MONGODB_USERNAME: Base64-encoded username for MongoDB
  # - MONGODB_PASSWORD: Base64-encoded password for MongoDB
  # - MONGODB_AUTH_SOURCE: Base64-encoded string for authentication DB (e.g. admin)
  # - MONGODB_TLS_CERT: Base64-encoded TLS certificate for secure connections
  #############################################################################
  MONGODB_USERNAME: "BASE64_ENCODED_PLACEHOLDER"
  MONGODB_PASSWORD: "BASE64_ENCODED_PLACEHOLDER"
  MONGODB_AUTH_SOURCE: "YWRtaW4=" # "admin" in Base64
  MONGODB_TLS_CERT: "BASE64_ENCODED_PLACEHOLDER"

  #############################################################################
  # PostgreSQL Credentials
  #
  # - POSTGRES_USERNAME: Base64-encoded username for PostgreSQL
  # - POSTGRES_PASSWORD: Base64-encoded password for PostgreSQL
  # - POSTGRES_SSL_CERT: Base64-encoded SSL certificate for PostgreSQL
  # - POSTGRES_SSL_KEY: Base64-encoded SSL private key for PostgreSQL
  #############################################################################
  POSTGRES_USERNAME: "BASE64_ENCODED_PLACEHOLDER"
  POSTGRES_PASSWORD: "BASE64_ENCODED_PLACEHOLDER"
  POSTGRES_SSL_CERT: "BASE64_ENCODED_PLACEHOLDER"
  POSTGRES_SSL_KEY: "BASE64_ENCODED_PLACEHOLDER"

  #############################################################################
  # TimescaleDB Credentials
  #
  # - TIMESCALE_USERNAME: Base64-encoded username for TimescaleDB
  # - TIMESCALE_PASSWORD: Base64-encoded password for TimescaleDB
  # - TIMESCALE_SSL_CERT: Base64-encoded SSL certificate for TimescaleDB
  #############################################################################
  TIMESCALE_USERNAME: "BASE64_ENCODED_PLACEHOLDER"
  TIMESCALE_PASSWORD: "BASE64_ENCODED_PLACEHOLDER"
  TIMESCALE_SSL_CERT: "BASE64_ENCODED_PLACEHOLDER"

---
apiVersion: v1
kind: Secret
metadata:
  name: auth-secrets
  labels:
    app.kubernetes.io/name: dog-walking-platform
    app.kubernetes.io/component: secrets
    security.platform.io/classification: critical
  annotations:
    secret.platform.io/rotation-schedule: "30d"
    secret.platform.io/last-rotated: "timestamp"
    secret.platform.io/encryption: "aes256-gcm"
type: Opaque
data:
  #############################################################################
  # JWT Key Pair
  #
  # - JWT_PRIVATE_KEY: Base64-encoded RSA private key used for RS256 signing
  # - JWT_PUBLIC_KEY: Base64-encoded RSA public key for token verification
  #############################################################################
  JWT_PRIVATE_KEY: "BASE64_ENCODED_PLACEHOLDER"
  JWT_PUBLIC_KEY: "BASE64_ENCODED_PLACEHOLDER"

  #############################################################################
  # OAuth Credentials
  #
  # Google OAuth:
  # - GOOGLE_CLIENT_ID: Base64-encoded client ID for Google
  # - GOOGLE_CLIENT_SECRET: Base64-encoded client secret for Google
  #
  # Apple OAuth:
  # - APPLE_CLIENT_ID: Base64-encoded client ID for Apple
  # - APPLE_TEAM_ID: Base64-encoded Apple team identifier
  # - APPLE_PRIVATE_KEY: Base64-encoded private key for Apple sign-in
  #
  # Facebook OAuth:
  # - FACEBOOK_CLIENT_ID: Base64-encoded client ID for Facebook
  # - FACEBOOK_CLIENT_SECRET: Base64-encoded client secret for Facebook
  #############################################################################
  GOOGLE_CLIENT_ID: "BASE64_ENCODED_PLACEHOLDER"
  GOOGLE_CLIENT_SECRET: "BASE64_ENCODED_PLACEHOLDER"
  APPLE_CLIENT_ID: "BASE64_ENCODED_PLACEHOLDER"
  APPLE_TEAM_ID: "BASE64_ENCODED_PLACEHOLDER"
  APPLE_PRIVATE_KEY: "BASE64_ENCODED_PLACEHOLDER"
  FACEBOOK_CLIENT_ID: "BASE64_ENCODED_PLACEHOLDER"
  FACEBOOK_CLIENT_SECRET: "BASE64_ENCODED_PLACEHOLDER"

  #############################################################################
  # MFA Credentials
  #
  # - SMS_API_KEY: Base64-encoded API key for SMS-based multi-factor auth
  # - EMAIL_API_KEY: Base64-encoded API key for email-based multi-factor auth
  #############################################################################
  SMS_API_KEY: "BASE64_ENCODED_PLACEHOLDER"
  EMAIL_API_KEY: "BASE64_ENCODED_PLACEHOLDER"

---
apiVersion: v1
kind: Secret
metadata:
  name: payment-secrets
  labels:
    app.kubernetes.io/name: dog-walking-platform
    app.kubernetes.io/component: secrets
    security.platform.io/classification: critical
  annotations:
    secret.platform.io/rotation-schedule: "30d"
    secret.platform.io/last-rotated: "timestamp"
    secret.platform.io/encryption: "aes256-gcm"
type: Opaque
data:
  #############################################################################
  # Stripe Credentials
  #
  # - STRIPE_API_KEY: Base64-encoded Stripe secret API key
  # - STRIPE_WEBHOOK_SECRET: Base64-encoded signing secret for verifying webhooks
  # - STRIPE_ENDPOINT_SECRET: Base64-encoded additional endpoint-level secret
  # - STRIPE_API_VERSION: Base64-encoded Stripe API version (e.g. "2023-10-16")
  # - STRIPE_WEBHOOK_IPS: Base64-encoded IP addresses allowed for webhook traffic
  # - STRIPE_RETRY_CONFIG: Base64-encoded JSON or string for retry logic
  # - STRIPE_RATE_LIMITS: Base64-encoded JSON or string for rate limit configuration
  #############################################################################
  STRIPE_API_KEY: "BASE64_ENCODED_PLACEHOLDER"
  STRIPE_WEBHOOK_SECRET: "BASE64_ENCODED_PLACEHOLDER"
  STRIPE_ENDPOINT_SECRET: "BASE64_ENCODED_PLACEHOLDER"
  STRIPE_API_VERSION: "MjAyMy0xMC0xNg==" # "2023-10-16" in Base64
  STRIPE_WEBHOOK_IPS: "BASE64_ENCODED_PLACEHOLDER"
  STRIPE_RETRY_CONFIG: "BASE64_ENCODED_PLACEHOLDER"
  STRIPE_RATE_LIMITS: "BASE64_ENCODED_PLACEHOLDER"

---
apiVersion: v1
kind: Secret
metadata:
  name: messaging-secrets
  labels:
    app.kubernetes.io/name: dog-walking-platform
    app.kubernetes.io/component: secrets
    security.platform.io/classification: critical
  annotations:
    secret.platform.io/rotation-schedule: "30d"
    secret.platform.io/last-rotated: "timestamp"
    secret.platform.io/encryption: "aes256-gcm"
type: Opaque
data:
  #############################################################################
  # MQTT Credentials
  #
  # - MQTT_USERNAME: Base64-encoded username for MQTT connections
  # - MQTT_PASSWORD: Base64-encoded password for MQTT connections
  # - MQTT_TLS_CERT: Base64-encoded TLS certificate for MQTT
  # - MQTT_TLS_KEY: Base64-encoded TLS private key for MQTT
  #############################################################################
  MQTT_USERNAME: "BASE64_ENCODED_PLACEHOLDER"
  MQTT_PASSWORD: "BASE64_ENCODED_PLACEHOLDER"
  MQTT_TLS_CERT: "BASE64_ENCODED_PLACEHOLDER"
  MQTT_TLS_KEY: "BASE64_ENCODED_PLACEHOLDER"

  #############################################################################
  # Kafka Credentials
  #
  # - KAFKA_USERNAME: Base64-encoded username for Kafka
  # - KAFKA_PASSWORD: Base64-encoded password for Kafka
  # - KAFKA_SSL_CERT: Base64-encoded TLS certificate for Kafka
  # - KAFKA_SSL_KEY: Base64-encoded TLS private key for Kafka
  #############################################################################
  KAFKA_USERNAME: "BASE64_ENCODED_PLACEHOLDER"
  KAFKA_PASSWORD: "BASE64_ENCODED_PLACEHOLDER"
  KAFKA_SSL_CERT: "BASE64_ENCODED_PLACEHOLDER"
  KAFKA_SSL_KEY: "BASE64_ENCODED_PLACEHOLDER"

---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  labels:
    app.kubernetes.io/name: dog-walking-platform
    app.kubernetes.io/component: secrets
    security.platform.io/classification: critical
  annotations:
    secret.platform.io/rotation-schedule: "30d"
    secret.platform.io/last-rotated: "timestamp"
    secret.platform.io/encryption: "aes256-gcm"
type: Opaque
data:
  #############################################################################
  # Grafana Credentials
  #
  # - GRAFANA_ADMIN_PASSWORD: Base64-encoded administrative password
  # - GRAFANA_SECRET_KEY: Base64-encoded secret key for signing sessions
  #############################################################################
  GRAFANA_ADMIN_PASSWORD: "BASE64_ENCODED_PLACEHOLDER"
  GRAFANA_SECRET_KEY: "BASE64_ENCODED_PLACEHOLDER"

  #############################################################################
  # Prometheus Credentials
  #
  # - PROMETHEUS_PASSWORD: Base64-encoded password for Prometheus auth
  # - PROMETHEUS_TLS_CERT: Base64-encoded TLS certificate for Prometheus
  #############################################################################
  PROMETHEUS_PASSWORD: "BASE64_ENCODED_PLACEHOLDER"
  PROMETHEUS_TLS_CERT: "BASE64_ENCODED_PLACEHOLDER"